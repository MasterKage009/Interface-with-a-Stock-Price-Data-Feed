From 6cac63b8e11e3fe990ae0996c3e10032b8f0b526 Mon Sep 17 00:00:00 2001
From: Nigel_Master <nigelmstr@gmail.com>
Date: Mon, 3 Aug 2020 17:44:22 +0000
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-38.pyc | Bin 0 -> 1021 bytes
 client3.py                         |  37 +++++++++++++----------------
 client_test.py                     |  29 +++++++++++-----------
 3 files changed, 32 insertions(+), 34 deletions(-)
 create mode 100644 __pycache__/client3.cpython-38.pyc

diff --git a/__pycache__/client3.cpython-38.pyc b/__pycache__/client3.cpython-38.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..677901d11d7e01f1a5498a02babdd4c0ae00ff2f
GIT binary patch
literal 1021
zcmYjQO-~a+7@pak-EN^pK1yrDr5=bhQHt>(A*d+DaB2j?!HH(Gbl$?kew5j1BG{hl
z4=G3gh6jJdTs?93<jHrZLYT?>Iq%NA`#dwp<?;-{@qA~^k32$t=fT5K#9#*{`-Msn
zK_kMcu@<+CwYhC9<4joG5jJ-P6V7+S3&Irzv>p_NcVWq&Faz$Gw#k>Td=~6U3Fvuw
zG6&A&5wHonAvg4fPUdsV7ec}pVF7D5_!1OgX-q#eUg68U%4<-AMW}2Ocr1!gfn}&d
zt;eclOewikn4JL+7R79xpf1(P*!sV=FX$0zmT&Q2Nay;=nNt0&Rx3)oL3Ea8YHM?2
zbE9=R0D1K`6tBOH!atOdF3SCI&|@gODA^9GA!1S|BdT)GsuN-3d30o%nBB+r&>Gq`
zBAgX6VndooL)K&1joZ;qrqb?(E~vEcpM*j?eHnIP8VA|Mt%c__sdjo%8mOkDoy$S0
zK;~&(#1H&weGzM?uFPBfLF6o&zpq+nX$&nnND`2(!!*bgi2Xo8ZxFR1PFv^w*pE{&
zh`@i*>P8_X>g9U>N|#PSwF4D=Ov6MqaI4JR73$G>oFyvDnCs?U+>PAN#h_C`XGjG_
z=1YPcAwEO8g0^XOWDcq6u4(at>D~|SoD;J!RVA#`9`<n<s4#tsQRbo|)Uz0sb7s}|
z;~-3Y|N7}c4vT24W{p5K))1Jj)$CaVQ8CsWgI@F6GrM7(w%@(q)pmRDL$l831~Q7m
zlXVGr12V<kX{?zFW8myOOB3$OAQ5TIorB}O!%v!a3<md&BtZ<muN|y91x?XI#ze*o
zcY79a&$JJTc6+Ie1EraSKxo$xnsL|km`Qwz#Lz4A_a}4M4W;I0B<cY`Im2>_()N_Y
eH_MpH8mK&E3a8C%W_bmic8NA9GyHk9O8)`6boG@0

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..4b3106c 100644
--- a/client3.py
+++ b/client3.py
@@ -30,30 +30,27 @@ QUERY = "http://localhost:8080/query?id={}"
 N = 500
 
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
+  stock = quote['stock']
+  bid_price = float(quote['top_bid']['price'])
+  ask_price = float(quote['top_ask']['price'])
+  price = (bid_price + ask_price)/2
+  return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+  if (price_b == 0):
+    # wen price_b is 0 avoid throwing ZeroDivisionError
+    return
+  return price_a/price_b
 
 # Main
 if __name__ == "__main__":
 
 	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-
-		print ("Ratio %s" % getRatio(price, price))
+  for _ in range(N):
+    quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+    prices = {}
+    for quote in quotes:
+      stock, bid_price, ask_price, price = getDataPoint(quote)
+      prices[stock] = price
+      print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+    print ("Ratio %s" % (getRatio(prices['ABC'], prices ['DEF'])))
diff --git a/client_test.py b/client_test.py
index af2bf26..6ba20a7 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,25 +1,26 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio 
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
     quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
+   ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
+ # def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+  #  quotes = [
+   #   {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+    #  {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    #]
     """ ------------ Add the assertion below ------------ """
 
-
-  """ ------------ Add more unit tests ------------ """
-
-
-
-if __name__ == '__main__':
+    #for quote in quotes:
+     # self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], (quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2)))
+      
+      
+if __name__ == "__main__":
     unittest.main()
-- 
2.17.1

